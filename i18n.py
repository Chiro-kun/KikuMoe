from typing import Dict

I18N: Dict[str, Dict[str, str]] = {
    'it': {
        'app_title': 'LISTEN.moe Player (VLC)',
        'header': 'LISTEN.moe - {channel} - {format} (VLC)',
        'channel_label': 'Canale:',
        'format_label': 'Formato:',
        'language_label': 'Lingua:',
        'play': 'Riproduci',
        'pause': 'Pausa',
        'stop': 'Stop',
        'volume': 'Volume',
        'mute': 'Muto',
        'unmute': 'Riattiva audio',
        'now_playing_prefix': 'In riproduzione:',
        'status_opening': 'Apertura…',
        'status_buffering': 'Buffering…',
        'status_buffering_pct': 'Buffering… {pct}% ',
        'status_playing': 'In riproduzione!',
        'status_paused': 'In pausa.',
        'status_stopped': 'Fermo.',
        'status_ended': 'Stream terminato.',
        'status_error': 'Errore di riproduzione.',
        'status_restarting': 'Riavvio dello stream…',
        'ws_closed_reconnect': 'In riproduzione: WS chiuso, riconnessione...',
        'ws_error_prefix': 'In riproduzione: errore WS: ',
        'unknown': 'Sconosciuto',
        'libvlc_not_ready': 'VLC non inizializzato. Installare VLC Desktop (stessa architettura di Python) o impostare il percorso di libvlc.',
        'libvlc_init_failed': 'Impossibile inizializzare VLC. Verificare il percorso di libvlc e la compatibilità (x64/x86).',
        'libvlc_button': 'Imposta percorso VLC…',
        'libvlc_choose_title': 'Seleziona cartella VLC',
        'libvlc_saved_ok': 'Percorso VLC salvato. Prova a riprodurre lo stream.',
        'libvlc_saved_fail': 'Impossibile inizializzare VLC con il percorso selezionato.',
        'libvlc_hint': 'Suggerimento: scegli la cartella che contiene libvlc.dll (es. C:/Program Files/VideoLAN/VLC) e assicurati che l’architettura corrisponda a Python.',
        # Nuove chiavi per indicatori/Tray/dettagli VLC
        'vlc_present': 'VLC è presente',
        'vlc_not_found': 'VLC non trovato',
        'vlc_version_label': 'Versione VLC:',
        'vlc_path_label': 'Percorso VLC:',
        'vlc_path_system': 'Sistema/PATH',
        'tray_show': 'Mostra finestra',
        'tray_hide': 'Nascondi finestra',
        'tray_play_pause': 'Play/Pausa',
        'tray_stop': 'Stop',
        'tray_mute': 'Muto',
        'tray_unmute': 'Riattiva audio',
        'tray_quit': 'Esci',
        # Chiavi per finestra impostazioni
        'settings_button': 'Impostazioni',
        'settings_title': 'Impostazioni',
        'settings_autoplay': 'Avvio automatico playback all’apertura',
        'settings_language': 'Selezione lingua',
        'settings_channel': 'Canale di default',
        'settings_format': 'Formato di default',
        'settings_volume': 'Volume di default',
        'settings_mute': 'Muto di default',
        'settings_vlc_path': 'Percorso VLC',
        'settings_browse': 'Sfoglia…',
        'settings_tray_enable': 'Abilita tray',
        'settings_tray_notifications': 'Notifiche brano in tray',
        'settings_ok': 'OK',
        'settings_cancel': 'Annulla',
        'settings_apply': 'Applica',
    },
    'en': {
        'app_title': 'LISTEN.moe Player (VLC)',
        'header': 'LISTEN.moe - {channel} - {format} (VLC)',
        'channel_label': 'Channel:',
        'format_label': 'Format:',
        'language_label': 'Language:',
        'play': 'Play',
        'pause': 'Pause',
        'stop': 'Stop',
        'volume': 'Volume',
        'mute': 'Mute',
        'unmute': 'Unmute',
        'now_playing_prefix': 'Now Playing:',
        'status_opening': 'Opening…',
        'status_buffering': 'Buffering…',
        'status_buffering_pct': 'Buffering… {pct}% ',
        'status_playing': 'Playing!',
        'status_paused': 'Paused.',
        'status_stopped': 'Stopped.',
        'status_ended': 'Stream ended.',
        'status_error': 'Playback error.',
        'status_restarting': 'Restarting stream…',
        'ws_closed_reconnect': 'Now Playing: WS closed, reconnecting...',
        'ws_error_prefix': 'Now Playing: WS error: ',
        'unknown': 'Unknown',
        'libvlc_not_ready': 'VLC not initialized. Install VLC Desktop (same architecture as Python) or set libvlc path.',
        'libvlc_init_failed': 'Failed to initialize VLC. Check libvlc path and architecture (x64/x86).',
        'libvlc_button': 'Set VLC Path…',
        'libvlc_choose_title': 'Select VLC folder',
        'libvlc_saved_ok': 'VLC path saved. Try playing the stream.',
        'libvlc_saved_fail': 'Failed to initialize VLC with the selected path.',
        'libvlc_hint': 'Hint: choose the folder containing libvlc.dll (e.g., C:/Program Files/VideoLAN/VLC) and ensure architecture matches Python.',
        # New keys for indicators/Tray/VLC details
        'vlc_present': 'VLC is present',
        'vlc_not_found': 'VLC not found',
        'vlc_version_label': 'VLC Version:',
        'vlc_path_label': 'VLC Path:',
        'vlc_path_system': 'System/PATH',
        'tray_show': 'Show window',
        'tray_hide': 'Hide window',
        'tray_play_pause': 'Play/Pause',
        'tray_stop': 'Stop',
        'tray_mute': 'Mute',
        'tray_unmute': 'Unmute',
        'tray_quit': 'Quit',
        # Keys for settings window
        'settings_button': 'Settings',
        'settings_title': 'Settings',
        'settings_autoplay': 'Autoplay on startup',
        'settings_language': 'Language',
        'settings_channel': 'Default channel',
        'settings_format': 'Default format',
        'settings_volume': 'Default volume',
        'settings_mute': 'Default mute',
        'settings_vlc_path': 'VLC path',
        'settings_browse': 'Browse…',
        'settings_tray_enable': 'Enable tray icon',
        'settings_tray_notifications': 'Song notifications in tray',
        'settings_ok': 'OK',
        'settings_cancel': 'Cancel',
        'settings_apply': 'Apply',
    },
}


class I18n:
    def __init__(self, lang: str) -> None:
        self.lang = 'it' if lang not in ('it', 'en') else lang

    def set_lang(self, lang: str) -> None:
        self.lang = 'it' if lang not in ('it', 'en') else lang

    def t(self, key: str, **kwargs) -> str:
        try:
            txt = I18N[self.lang][key]
            return txt.format(**kwargs) if kwargs else txt
        except Exception:
            return I18N['it'].get(key, key)